<footer class="sticky-footer">
    <div class="container">
        <div class="text-center">
            <small>Copyright © Your Website 2017</small>
        </div>
    </div>
</footer>
<!-- Scroll to Top Button-->
<a class="scroll-to-top rounded" href="#page-top">
    <i class="fa fa-angle-up"></i>
</a>
<!-- Logout Modal-->
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Ready to Leave?</h5>
                <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">Select "Logout" below if you are ready to end your current session.</div>
            <div class="modal-footer">
                <button class="btn btn-secondary" type="button" data-dismiss="modal">Cancel</button>
                <a class="btn btn-primary" href="/logout">Logout</a>
            </div>
        </div>
    </div>
</div>
<!-- Bootstrap core JavaScript-->
<script src="/js/jquery/jquery.min.js"></script>
<script src="/js/bootstrap/js/bootstrap.bundle.min.js"></script>
<!-- Core plugin JavaScript-->
<script src="/js/jquery-easing/jquery.easing.min.js"></script>
<!-- Custom scripts for all pages-->
<script src="/js/admin/sb-admin.min.js"></script>
<!-- Bootstrap switch -->
<script src="/js/admin/bootstrap-switch.min.js"></script>

<script>

    $("[name='approveComment']").bootstrapSwitch();


    $(document).ready(()=>{


        $("[name='approveComment']").on('switchChange.bootstrapSwitch', function(e, data){

            const id = $(this).attr('data-id');

            $.ajax({

                type: "POST",
                url: '/admin/comments/approve-comment',
                data: {id: id, approveComment: data},
                cache: false,
                success: function(data){

                    toastr.success(`Comment with id ${data._id} was updated`);

                }


            });





        });




    });

</script>

<script>

    $("[name='allowUser']").bootstrapSwitch();


    $(document).ready(()=>{


        $("[name='allowUser']").on('switchChange.bootstrapSwitch', function(e, data){

            const id = $(this).attr('data-id');

            $.ajax({

                type: "POST",
                url: '/admin/comments/approve-user',
                data: {id: id, allowUser: data},
                cache: false,
                success: function(data){

                    toastr.success(`User with id ${data._id} was updated`);

                }


            });





        });




    });

</script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
</script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/4.2.0/chart.min.js"></script>
<script>
    const ctx = document.getElementById('myChart');
    const myChart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: ['{{postTitle.[0]}}', '{{postTitle.[1]}}', '{{postTitle.[2]}}', '{{postTitle.[3]}}', '{{postTitle.[4]}}'],
            labelsLink: ['http://localhost:4500/post/{{usersId.[0]}}', 'http://localhost:4500/post/{{usersId.[1]}}', 'http://localhost:4500/post/{{usersId.[2]}}', 'http://localhost:4500/post/{{usersId.[3]}}', 'http://localhost:4500/post/{{usersId.[4]}}'],
            datasets: [{
                label: '# of c',
                data: [{{mostComments}}],
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }

    });

    function clickableScales(canvas, click){
        const height = myChart.scales.x.height;
        const top =  myChart.scales.x.top;
        const bottom = myChart.scales.x.bottom;
        const left = myChart.scales.x.left;
        const right = myChart.scales.x.maxWidth / myChart.scales.x.ticks.length;
        let resetCoordinates = canvas.getBoundingClientRect()

        const x = click.clientX - resetCoordinates.left;
        const y = click.clientY - resetCoordinates.top;
        for(let i = 0; i < myChart.scales.x.ticks.length; i++){
            if(x >= left + (right * i) && x <= right + (right * i) && y >= top && y <= bottom){

                console.log(myChart.data.labelsLink[i]);
                window.open(myChart.data.labelsLink[i])
            }
        }

    }
    ctx.addEventListener('click', (e)=> {
        clickableScales(ctx, e)
    })
</script>

<script>
    const ctx1 = document.getElementById('myChart1');
    new Chart(ctx1, {
        type: 'bar',
        data: {
            labels: ['{{usersMostPost.[0]}}', '{{usersMostPost.[1]}}', '{{usersMostPost.[2]}}', '{{usersMostPost.[3]}}', '{{usersMostPost.[4]}}'],
            datasets: [{
                label: '# of Posts',
                data: [{{postCounts}}],
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }

    });
</script>

<script>
    const ctx2 = document.getElementById('myChart2');
    new Chart(ctx2, {
        type: 'bar',
        data: {
            labels: ['{{usersMostComm.[0]}}', '{{usersMostComm.[1]}}', '{{usersMostComm.[2]}}', '{{usersMostComm.[3]}}', '{{usersMostComm.[4]}}'],
            datasets: [{
                label: '# of Comments',
                data: [{{commCounts}}],
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }

    });
</script>